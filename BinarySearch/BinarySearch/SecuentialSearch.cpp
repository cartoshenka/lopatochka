//инсайды:
//-√еометри€ случаев, одни те же манипул€ции можно проводить различными пут€ми,
//но каждый из них содержит свои возможности и ограничени€, некотрые из геометрий достойны детального рассмотрени€
//-’ороший прием исследовать материал, использу€ частные случаи, и походу раскрывать уже в полноценное исследование темы
//-’ороша€ практика оставл€ть часть неправильного кода задокументированным, так как он несет в себе информацию сам по себе
//-ќставл€й пространство дл€ неопределенности и ошибок, и просто работай с ним отдельно, это сильно ускорит процесс
// -ћетод формировани€ слишком четких и емких формулировк очень энергозатратный и медленный, а метод зацепок и переходов легкий и динамичный
// -÷елостность и лаконичность это отдельные затраты и цена у них не маленька€, а смысл практически нулевой, проще создать карту котора€ поможет тебе перемещатьс€ в твоих запис€х 
//-–аботай с тем, что есть используй гибкость и адаптивность ума, это сильно ускор€ет
// вопросы:
//-как устроена под капотом
//	передача ссылок в функцию?
//конструкции:
//-for
#include<iostream>

using namespace std;

int SequentialSearch(int *list, int target, int N){
	for (int i = 0; i < N; i++)
	{
		if (target == list[i]) return i;
	}
}

//int main() {
//	int list[10]{ 1,2,3,4,5,6,7,8,9,10 };
//	int target = 8;
//	int N = 10;
//	cout << "HI\n" << SequentialSearch(list, target, N);
//	return 0;
//
//	return 0;
//}